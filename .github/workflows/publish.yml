name: Publish

on:
  workflow_dispatch:
    inputs:
      version:
        description: "version(ex. 1.0.0)"
        required: true
        default: "0.0.0"
      release:
        description: "release"
        required: true
        default: "false"

env:
  VERSION: ${{ github.event.inputs.version }}
  RELEASE: ${{ github.event.inputs.release }}
  UPLOAD_NAME: "Upload"
  APP_NAME: "ImageConverterApp"

jobs:
  build:
    strategy:
      matrix:
        include:
          - platform: "windows-latest"
            runtime: "win-x64"
            tmp: "C:/Users/runner/AppData/Local/Temp/"
            publish: ImageConverter.win-x64.tar.gz
            upload: ImageConverter.win-x64.tar.gz

          - platform: "windows-latest"
            runtime: "android-arm64"
            tmp: "C:/Users/runner/AppData/Local/Temp/"
            app_version: 1
            app_id: com.github.EX-EXE.ImageConverterApp
            publish: com.github.EX-EXE.ImageConverterApp-Signed.apk
            upload: ImageConverter.apk

          #- platform: "macos-latest"
          #  runtime: "osx-x64"
          #  publish: ImageConverter
          #  upload: ImageConverter.osx-x64

          #- platform: "ubuntu-latest"
          #  runtime: "linux-x64"
          #  publish: ImageConverter
          #  upload: ImageConverter.linux-x64

          #- platform: "ubuntu-latest"
          #  runtime: "linux-arm64"
          #  publish: ImageConverter
          #  upload: ImageConverter.linux-arm64
    runs-on: ${{ matrix.platform }}
    
    steps:
    - name: Checkout
      uses: actions/checkout@v3
      with:
        fetch-depth: 0

    - name: Install .NET
      uses: actions/setup-dotnet@v3
      with:
        dotnet-version: 7.0.x

    - name: Install Workload
      shell: bash
      run: |
        if [ ${{ matrix.platform }} == "windows-latest" ]; then
            dotnet workload install maui --source https://api.nuget.org/v3/index.json
            dotnet workload install android --source https://api.nuget.org/v3/index.json
        fi

    - name: Restore
      run: dotnet restore
      
    - name: Publish
      shell: bash
      run: |
        if [ ${{ matrix.runtime }} == "android-arm64" ]; then
            dotnet publish ./src/ImageConverterApp.Android/ -c release -p:Version=${{ env.VERSION }} -r ${{ matrix.runtime }} -o ${{ matrix.tmp }}${{ matrix.runtime }}/ -p:ApplicationTitle=${{ env.APP_NAME }} -p:ApplicationId=${{ matrix.app_id }} -p:ApplicationVersion=${{ matrix.app_version }} -p:ApplicationDisplayVersion=${{ env.VERSION }}
        else
            dotnet publish ./src/ImageConverterApp.Desktop/ -c release -p:Version=${{ env.VERSION }} -r ${{ matrix.runtime }} -o ${{ matrix.tmp }}${{ matrix.runtime }}/files/
            cd ${{ matrix.tmp }}${{ matrix.runtime }}/
            tar -czvf ${{ matrix.publish }} ./files/
        fi
        ls -l ${{ matrix.tmp }}${{ matrix.runtime }}/
           
    - name: Rename
      run: |
           mv ${{ matrix.tmp }}${{ matrix.runtime }}/${{ matrix.publish }} ${{ matrix.tmp }}${{ matrix.runtime }}/${{ matrix.upload }}
    - name: Upload
      uses: actions/upload-artifact@v3
      with:
          name: ${{ env.UPLOAD_NAME }}
          path: ${{ matrix.tmp }}${{ matrix.runtime }}/${{ matrix.upload }}
           

  release:
    if: github.event.inputs.release == 'true'
    needs: [build]
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v3
        with:
          fetch-depth: 0
          
      - name: Download Release Asset
        uses: actions/download-artifact@v3
        id: download_asset
        with:
          name: ${{ env.UPLOAD_NAME }}
          path: /tmp/release/${{ env.UPLOAD_NAME }}/ 

      - name: Upload Release Asset
        id: upload-release-asset 
        uses: softprops/action-gh-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          name: ${{ env.APP_NAME }} Ver.${{ env.VERSION }}
          files: /tmp/release/${{ env.UPLOAD_NAME }}/*
          tag_name: Release/${{ env.VERSION }}